{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { APIkey } from '../../common/apis/MovieApiKey';\nimport movieApi from '../../common/apis/movieApi'; // its take two arguments identifier and callvbackfunction and one more is object\n\nexport const fetchAsyncMovies = createAsyncThunk('movies/fetchAsyncMovies', async () => {\n  const movieText = 'Harry';\n  const response = await movieApi.get(`?apikey=${APIkey}&s=${movieText}&type=movie`);\n  return response.data;\n});\nexport const fetchAsyncShows = createAsyncThunk('movies/fetchAsyncMovies', async () => {\n  const movieText = 'Harry';\n  const response = await movieApi.get(`?apikey=${APIkey}&s=${movieText}&type=movie`);\n  return response.data;\n});\nconst initialState = {\n  movies: {}\n};\nconst movieSlice = createSlice({\n  name: \"movies\",\n  initialState,\n  reducers: {\n    addMovies: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      state.movies = payload;\n    }\n  },\n  extraReducers: {\n    [fetchAsyncMovies.pending]: () => {\n      console.log(\"Pending\");\n    },\n    [fetchAsyncMovies.fulfilled]: (state, _ref2) => {\n      let {\n        payload\n      } = _ref2;\n      console.log(\"Fetched Successfully\");\n      return { ...state,\n        movies: payload\n      };\n    },\n    [fetchAsyncMovies.rejected]: () => {\n      console.log(\"Rejected\");\n    }\n  }\n});\nexport const {\n  addMovies\n} = movieSlice.actions;\nexport const getAllMovies = state => state.movies.movies;\nexport default movieSlice.reducer;","map":{"version":3,"sources":["C:/Users/moham/OneDrive/Desktop/bootstrap-app/src/features/movies/movieSlice.js"],"names":["createSlice","createAsyncThunk","APIkey","movieApi","fetchAsyncMovies","movieText","response","get","data","fetchAsyncShows","initialState","movies","movieSlice","name","reducers","addMovies","state","payload","extraReducers","pending","console","log","fulfilled","rejected","actions","getAllMovies","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,SAAQC,MAAR,QAAqB,+BAArB;AACA,OAAOC,QAAP,MAAqB,4BAArB,C,CAEA;;AACA,OAAO,MAAMC,gBAAgB,GAAGH,gBAAgB,CAAC,yBAAD,EAA4B,YAAW;AACnF,QAAMI,SAAS,GAAG,OAAlB;AACA,QAAMC,QAAQ,GAAG,MAAMH,QAAQ,CAACI,GAAT,CAAc,WAAUL,MAAO,MAAKG,SAAU,aAA9C,CAAvB;AACA,SAAOC,QAAQ,CAACE,IAAhB;AACH,CAJ+C,CAAzC;AAMP,OAAO,MAAMC,eAAe,GAAGR,gBAAgB,CAAC,yBAAD,EAA4B,YAAW;AAClF,QAAMI,SAAS,GAAG,OAAlB;AACA,QAAMC,QAAQ,GAAG,MAAMH,QAAQ,CAACI,GAAT,CAAc,WAAUL,MAAO,MAAKG,SAAU,aAA9C,CAAvB;AACA,SAAOC,QAAQ,CAACE,IAAhB;AACH,CAJ8C,CAAxC;AAMP,MAAME,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAC;AADU,CAArB;AAIA,MAAMC,UAAU,GAAGZ,WAAW,CAAC;AAC3Ba,EAAAA,IAAI,EAAC,QADsB;AAE3BH,EAAAA,YAF2B;AAG3BI,EAAAA,QAAQ,EAAC;AACLC,IAAAA,SAAS,EAAG,CAACC,KAAD,WAAsB;AAAA,UAAd;AAACC,QAAAA;AAAD,OAAc;AAC9BD,MAAAA,KAAK,CAACL,MAAN,GAAeM,OAAf;AACH;AAHI,GAHkB;AAQ3BC,EAAAA,aAAa,EAAE;AACX,KAACd,gBAAgB,CAACe,OAAlB,GAA4B,MAAM;AAC9BC,MAAAA,OAAO,CAACC,GAAR,CAAY,SAAZ;AACH,KAHU;AAIX,KAACjB,gBAAgB,CAACkB,SAAlB,GAA8B,CAACN,KAAD,YAAsB;AAAA,UAAd;AAACC,QAAAA;AAAD,OAAc;AAChDG,MAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ;AACA,aAAO,EAAC,GAAGL,KAAJ;AAAWL,QAAAA,MAAM,EAACM;AAAlB,OAAP;AACH,KAPU;AAQX,KAACb,gBAAgB,CAACmB,QAAlB,GAA6B,MAAM;AAC/BH,MAAAA,OAAO,CAACC,GAAR,CAAY,UAAZ;AACH;AAVU;AARY,CAAD,CAA9B;AAuBA,OAAO,MAAM;AAACN,EAAAA;AAAD,IAAcH,UAAU,CAACY,OAA/B;AACP,OAAO,MAAMC,YAAY,GAAIT,KAAD,IAAWA,KAAK,CAACL,MAAN,CAAaA,MAA7C;AACP,eAAeC,UAAU,CAACc,OAA1B","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport {APIkey} from '../../common/apis/MovieApiKey';\r\nimport movieApi from '../../common/apis/movieApi'\r\n\r\n// its take two arguments identifier and callvbackfunction and one more is object\r\nexport const fetchAsyncMovies = createAsyncThunk('movies/fetchAsyncMovies', async() => {\r\n    const movieText = 'Harry';\r\n    const response = await movieApi.get(`?apikey=${APIkey}&s=${movieText}&type=movie`)\r\n    return response.data;\r\n});\r\n\r\nexport const fetchAsyncShows = createAsyncThunk('movies/fetchAsyncMovies', async() => {\r\n    const movieText = 'Harry';\r\n    const response = await movieApi.get(`?apikey=${APIkey}&s=${movieText}&type=movie`)\r\n    return response.data;\r\n});\r\n\r\nconst initialState = {\r\n    movies:{},\r\n}\r\n\r\nconst movieSlice = createSlice({\r\n    name:\"movies\",\r\n    initialState,\r\n    reducers:{\r\n        addMovies : (state, {payload}) => {\r\n            state.movies = payload;\r\n        },\r\n    },\r\n    extraReducers: {\r\n        [fetchAsyncMovies.pending]: () => {\r\n            console.log(\"Pending\");\r\n        },\r\n        [fetchAsyncMovies.fulfilled]: (state, {payload}) => {\r\n            console.log(\"Fetched Successfully\");\r\n            return {...state, movies:payload};\r\n        },\r\n        [fetchAsyncMovies.rejected]: () => {\r\n            console.log(\"Rejected\");\r\n        },\r\n    },\r\n    \r\n})\r\n\r\nexport const {addMovies} = movieSlice.actions;\r\nexport const getAllMovies = (state) => state.movies.movies\r\nexport default movieSlice.reducer;"]},"metadata":{},"sourceType":"module"}