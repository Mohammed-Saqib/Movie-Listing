{"ast":null,"code":"import _defineProperty from\"C:\\\\Users\\\\moham\\\\OneDrive\\\\Desktop\\\\redux-toolkit\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\defineProperty.js\";import _objectSpread from\"C:\\\\Users\\\\moham\\\\OneDrive\\\\Desktop\\\\redux-toolkit\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\objectSpread2.js\";import _asyncToGenerator from\"C:\\\\Users\\\\moham\\\\OneDrive\\\\Desktop\\\\redux-toolkit\\\\node_modules\\\\@babel\\\\runtime\\\\helpers\\\\esm\\\\asyncToGenerator.js\";var _extraReducers;import _regeneratorRuntime from\"C:\\\\Users\\\\moham\\\\OneDrive\\\\Desktop\\\\redux-toolkit\\\\node_modules\\\\@babel\\\\runtime\\\\regenerator\\\\index.js\";import{createSlice,createAsyncThunk}from\"@reduxjs/toolkit\";import{APIkey}from'../../common/apis/MovieApiKey';import movieApi from'../../common/apis/movieApi';// its take two arguments identifier and callvbackfunction and one more is object\nexport var fetchAsyncMovies=createAsyncThunk('movies/fetchAsyncMovies',/*#__PURE__*/function(){var _ref=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee(term){var response;return _regeneratorRuntime.wrap(function _callee$(_context){while(1){switch(_context.prev=_context.next){case 0:_context.next=2;return movieApi.get(\"?apikey=\".concat(APIkey,\"&s=\").concat(term,\"&type=movie\"));case 2:response=_context.sent;return _context.abrupt(\"return\",response.data);case 4:case\"end\":return _context.stop();}}},_callee);}));return function(_x){return _ref.apply(this,arguments);};}());export var fetchAsyncShows=createAsyncThunk('movies/fetchAsyncShows',/*#__PURE__*/function(){var _ref2=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee2(term){var response;return _regeneratorRuntime.wrap(function _callee2$(_context2){while(1){switch(_context2.prev=_context2.next){case 0:_context2.next=2;return movieApi.get(\"?apikey=\".concat(APIkey,\"&s=\").concat(term,\"&type=series\"));case 2:response=_context2.sent;return _context2.abrupt(\"return\",response.data);case 4:case\"end\":return _context2.stop();}}},_callee2);}));return function(_x2){return _ref2.apply(this,arguments);};}());export var fetchAsyncMovieOrShowDetail=createAsyncThunk('movies/fetchAsyncMovieOrShowDetail',/*#__PURE__*/function(){var _ref3=_asyncToGenerator(/*#__PURE__*/_regeneratorRuntime.mark(function _callee3(id){var response;return _regeneratorRuntime.wrap(function _callee3$(_context3){while(1){switch(_context3.prev=_context3.next){case 0:_context3.next=2;return movieApi.get(\"?apikey=\".concat(APIkey,\"&i=\").concat(id,\"&plot=full\"));case 2:response=_context3.sent;return _context3.abrupt(\"return\",response.data);case 4:case\"end\":return _context3.stop();}}},_callee3);}));return function(_x3){return _ref3.apply(this,arguments);};}());var initialState={movies:{},shows:{},selectedMovieOrShow:{},loader:false};var movieSlice=createSlice({name:\"movies\",initialState:initialState,reducers:{// addMovies : (state, {payload}) => {  //using immer method which takes the copy of object and then allow us to make update\n//     state.movies = payload;\n// },\nremoveSelectedMovieOrShow:function removeSelectedMovieOrShow(state){state.selectedMovieOrShow={};}},extraReducers:(_extraReducers={},_defineProperty(_extraReducers,fetchAsyncMovies.pending,function(state){console.log(\"Pending\");state.loader=false;}),_defineProperty(_extraReducers,fetchAsyncMovies.fulfilled,function(state,_ref4){var payload=_ref4.payload;console.log(\"Fetched Successfully\");return _objectSpread(_objectSpread({},state),{},{movies:payload,loader:true});}),_defineProperty(_extraReducers,fetchAsyncMovies.rejected,function(state){console.log(\"Rejected\");state.loader=false;}),_defineProperty(_extraReducers,fetchAsyncShows.fulfilled,function(state,_ref5){var payload=_ref5.payload;console.log(\"Fetched Successfully\");return _objectSpread(_objectSpread({},state),{},{shows:payload,loader:true});}),_defineProperty(_extraReducers,fetchAsyncMovieOrShowDetail.fulfilled,function(state,_ref6){var payload=_ref6.payload;console.log(\"Fetched Successfully\");return _objectSpread(_objectSpread({},state),{},{selectedMovieOrShow:payload});}),_extraReducers)});// export const {addMovies} = movieSlice.actions;\nvar removeSelectedMovieOrShow=movieSlice.actions.removeSelectedMovieOrShow;export{removeSelectedMovieOrShow};export var getAllMovies=function getAllMovies(state){return state.movies.movies;};export var getAllShows=function getAllShows(state){return state.movies.shows;};export var getSelectedMovieOrShow=function getSelectedMovieOrShow(state){return state.movies.selectedMovieOrShow;};export var getLoader=function getLoader(state){return state.movies.loader;};export default movieSlice.reducer;","map":{"version":3,"sources":["C:/Users/moham/OneDrive/Desktop/redux-toolkit/src/features/movies/movieSlice.js"],"names":["createSlice","createAsyncThunk","APIkey","movieApi","fetchAsyncMovies","term","get","response","data","fetchAsyncShows","fetchAsyncMovieOrShowDetail","id","initialState","movies","shows","selectedMovieOrShow","loader","movieSlice","name","reducers","removeSelectedMovieOrShow","state","extraReducers","pending","console","log","fulfilled","payload","rejected","actions","getAllMovies","getAllShows","getSelectedMovieOrShow","getLoader","reducer"],"mappings":"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","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport {APIkey} from '../../common/apis/MovieApiKey';\r\nimport movieApi from '../../common/apis/movieApi'\r\n\r\n// its take two arguments identifier and callvbackfunction and one more is object\r\nexport const fetchAsyncMovies = createAsyncThunk('movies/fetchAsyncMovies', async(term) => {\r\n    // const movieText = 'Harry';\r\n    const response = await movieApi.get(`?apikey=${APIkey}&s=${term}&type=movie`)\r\n    return response.data;\r\n});\r\n\r\nexport const fetchAsyncShows = createAsyncThunk('movies/fetchAsyncShows', async(term) => {\r\n    // const seriesText = 'Friends';\r\n    const response = await movieApi.get(`?apikey=${APIkey}&s=${term}&type=series`)\r\n    return response.data;\r\n});\r\n\r\nexport const fetchAsyncMovieOrShowDetail = createAsyncThunk('movies/fetchAsyncMovieOrShowDetail', async(id) => {\r\n    const response = await movieApi.get(`?apikey=${APIkey}&i=${id}&plot=full`)\r\n    return response.data;\r\n});\r\n\r\nconst initialState = {\r\n    movies:{},\r\n    shows: {},\r\n    selectedMovieOrShow: {},\r\n    loader : false,\r\n}\r\n\r\nconst movieSlice = createSlice({\r\n    name:\"movies\",\r\n    initialState,\r\n    reducers:{\r\n        // addMovies : (state, {payload}) => {  //using immer method which takes the copy of object and then allow us to make update\r\n        //     state.movies = payload;\r\n        // },\r\n        removeSelectedMovieOrShow : (state) => {\r\n            state.selectedMovieOrShow = {};\r\n        }\r\n    },\r\n    extraReducers: {\r\n        [fetchAsyncMovies.pending]: (state) => {\r\n            console.log(\"Pending\");\r\n            state.loader = false;\r\n        },\r\n        [fetchAsyncMovies.fulfilled]: (state, {payload}) => {\r\n            console.log(\"Fetched Successfully\");\r\n            return {...state, movies:payload, loader : true};\r\n        },\r\n        [fetchAsyncMovies.rejected]: (state) => {\r\n            console.log(\"Rejected\");\r\n            state.loader = false;\r\n        },\r\n        [fetchAsyncShows.fulfilled]: (state, {payload}) => {\r\n            console.log(\"Fetched Successfully\");\r\n            return {...state, shows:payload, loader : true};\r\n        },\r\n        [fetchAsyncMovieOrShowDetail.fulfilled]: (state, {payload}) => {\r\n            console.log(\"Fetched Successfully\");\r\n            return {...state, selectedMovieOrShow:payload};\r\n        },\r\n    },\r\n    \r\n})\r\n\r\n// export const {addMovies} = movieSlice.actions;\r\nexport const {removeSelectedMovieOrShow} = movieSlice.actions;\r\nexport const getAllMovies = (state) => state.movies.movies;\r\nexport const getAllShows = (state) => state.movies.shows;\r\nexport const getSelectedMovieOrShow = (state) => state.movies.selectedMovieOrShow;\r\nexport const getLoader = (state) => state.movies.loader;\r\n\r\nexport default movieSlice.reducer;"]},"metadata":{},"sourceType":"module"}