{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moham\\\\OneDrive\\\\Desktop\\\\bootstrap-app\\\\src\\\\components\\\\MovieDetail\\\\MovieDetail.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { useDispatch } from 'react-redux';\nimport { useParams } from 'react-router-dom';\nimport { fetchAsyncMovieOrShowDetail, getSelectedMovieOrShow } from '../../features/movies/movieSlice';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst MovieDetail = () => {\n  _s();\n\n  const {\n    imdbID\n  } = useParams();\n  const dispatch = useDispatch();\n  const data = useSelector(getSelectedMovieOrShow); // fetching data from redux store\n  // console.log(data);\n\n  useEffect(() => {\n    dispatch(fetchAsyncMovieOrShowDetail(imdbID));\n  }, [dispatch, imdbID]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"movie-section\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"section-left\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-title\",\n        children: data.Title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-rating\",\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"IMDB Rating \", /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-star\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 22,\n            columnNumber: 38\n          }, this), \":\", data.imdbRating]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"IMDB Votes \", /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-thumbs-up\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 37\n          }, this), \":\", data.imdbVotes]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Runtime \", /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-film\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 34\n          }, this), \":\", data.Runtime]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 20\n        }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n          children: [\"Year \", /*#__PURE__*/_jsxDEV(\"i\", {\n            className: \"fas fa-calendar\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 31\n          }, this), \":\", data.Year]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 20\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 16\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"movie-plot\",\n        children: data.Plot\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 16\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 19,\n      columnNumber: 12\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 9\n  }, this);\n};\n\n_s(MovieDetail, \"4l5qDbpkUOkFaxQHfUcOZ6/uz3o=\", false, function () {\n  return [useParams, useDispatch, useSelector];\n});\n\n_c = MovieDetail;\nexport default MovieDetail;\n\nvar _c;\n\n$RefreshReg$(_c, \"MovieDetail\");","map":{"version":3,"sources":["C:/Users/moham/OneDrive/Desktop/bootstrap-app/src/components/MovieDetail/MovieDetail.jsx"],"names":["React","useEffect","useSelector","useDispatch","useParams","fetchAsyncMovieOrShowDetail","getSelectedMovieOrShow","MovieDetail","imdbID","dispatch","data","Title","imdbRating","imdbVotes","Runtime","Year","Plot"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAASC,2BAAT,EAAsCC,sBAAtC,QAAoE,kCAApE;;;AAEA,MAAMC,WAAW,GAAG,MAAM;AAAA;;AACtB,QAAM;AAAEC,IAAAA;AAAF,MAAaJ,SAAS,EAA5B;AACA,QAAMK,QAAQ,GAAGN,WAAW,EAA5B;AACA,QAAMO,IAAI,GAAGR,WAAW,CAACI,sBAAD,CAAxB,CAHsB,CAG4B;AAClD;;AAEAL,EAAAA,SAAS,CAAC,MAAM;AACdQ,IAAAA,QAAQ,CAACJ,2BAA2B,CAACG,MAAD,CAA5B,CAAR;AACD,GAFQ,EAEP,CAACC,QAAD,EAAWD,MAAX,CAFO,CAAT;AAIA,sBACI;AAAK,IAAA,SAAS,EAAC,eAAf;AAAA,2BACG;AAAK,MAAA,SAAS,EAAC,cAAf;AAAA,8BACI;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA,kBAA8BE,IAAI,CAACC;AAAnC;AAAA;AAAA;AAAA;AAAA,cADJ,eAEI;AAAK,QAAA,SAAS,EAAC,cAAf;AAAA,gCACI;AAAA,kDAAkB;AAAG,YAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,kBAAlB,OAAmDD,IAAI,CAACE,UAAxD;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eAEI;AAAA,iDAAiB;AAAG,YAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,kBAAjB,OAAuDF,IAAI,CAACG,SAA5D;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFJ,eAGI;AAAA,8CAAc;AAAG,YAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,kBAAd,OAA+CH,IAAI,CAACI,OAApD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAHJ,eAII;AAAA,2CAAW;AAAG,YAAA,SAAS,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,kBAAX,OAAgDJ,IAAI,CAACK,IAArD;AAAA;AAAA;AAAA;AAAA;AAAA,gBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA,cAFJ,eAQI;AAAK,QAAA,SAAS,EAAC,YAAf;AAAA,kBAA6BL,IAAI,CAACM;AAAlC;AAAA;AAAA;AAAA;AAAA,cARJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADH;AAAA;AAAA;AAAA;AAAA,UADJ;AAcH,CAxBD;;GAAMT,W;UACiBH,S,EACFD,W,EACJD,W;;;KAHXK,W;AA0BN,eAAeA,WAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useParams } from 'react-router-dom';\r\nimport { fetchAsyncMovieOrShowDetail, getSelectedMovieOrShow } from '../../features/movies/movieSlice';\r\n\r\nconst MovieDetail = () => {\r\n    const { imdbID } = useParams();\r\n    const dispatch = useDispatch();\r\n    const data = useSelector(getSelectedMovieOrShow); // fetching data from redux store\r\n    // console.log(data);\r\n\r\n    useEffect(() => {\r\n      dispatch(fetchAsyncMovieOrShowDetail(imdbID));\r\n    },[dispatch, imdbID])\r\n\r\n    return(\r\n        <div className='movie-section'>\r\n           <div className=\"section-left\">\r\n               <div className=\"movie-title\">{data.Title}</div>\r\n               <div className=\"movie-rating\">\r\n                   <span>IMDB Rating <i className='fas fa-star'></i>:{data.imdbRating}</span>\r\n                   <span>IMDB Votes <i className='fas fa-thumbs-up'></i>:{data.imdbVotes}</span>\r\n                   <span>Runtime <i className='fas fa-film'></i>:{data.Runtime}</span>\r\n                   <span>Year <i className='fas fa-calendar'></i>:{data.Year}</span>\r\n               </div>\r\n               <div className=\"movie-plot\">{data.Plot}</div>\r\n           </div>\r\n        </div>\r\n  );\r\n};\r\n\r\nexport default MovieDetail;\r\n"]},"metadata":{},"sourceType":"module"}