{"ast":null,"code":"import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\nimport { APIkey } from '../../common/apis/MovieApiKey';\nimport movieApi from '../../common/apis/movieApi'; // its take two arguments identifier and callvbackfunction and one more is object\n\nconst fetchAsyncMovies = createAsyncThunk('movies/fetchAsyncMovies', async () => {\n  const response = await movieApi.get(`?apikey=${APIkey}&s=${movieText}&type=movie`).catch(err => console.log(\"Eror is: \", err));\n  console.log(\"The respone from api\", response);\n  dispatch(addMovies(response.data));\n});\nconst initialState = {\n  movies: {}\n};\nconst movieSlice = createSlice({\n  name: \"movies\",\n  initialState,\n  reducers: {\n    addMovies: (state, _ref) => {\n      let {\n        payload\n      } = _ref;\n      state.movies = payload;\n    }\n  }\n});\nexport const {\n  addMovies\n} = movieSlice.actions;\nexport const getAllMovies = state => state.movies.movies;\nexport default movieSlice.reducer;","map":{"version":3,"sources":["C:/Users/moham/OneDrive/Desktop/bootstrap-app/src/features/movies/movieSlice.js"],"names":["createSlice","createAsyncThunk","APIkey","movieApi","fetchAsyncMovies","response","get","movieText","catch","err","console","log","dispatch","addMovies","data","initialState","movies","movieSlice","name","reducers","state","payload","actions","getAllMovies","reducer"],"mappings":"AAAA,SAASA,WAAT,EAAsBC,gBAAtB,QAA8C,kBAA9C;AACA,SAAQC,MAAR,QAAqB,+BAArB;AACA,OAAOC,QAAP,MAAqB,4BAArB,C,CAEA;;AACA,MAAMC,gBAAgB,GAAGH,gBAAgB,CAAC,yBAAD,EAA4B,YAAW;AAC5E,QAAMI,QAAQ,GAAG,MAAMF,QAAQ,CAACG,GAAT,CAAc,WAAUJ,MAAO,MAAKK,SAAU,aAA9C,EACtBC,KADsB,CAChBC,GAAG,IAAIC,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAwBF,GAAxB,CADS,CAAvB;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAY,sBAAZ,EAAoCN,QAApC;AACAO,EAAAA,QAAQ,CAACC,SAAS,CAACR,QAAQ,CAACS,IAAV,CAAV,CAAR;AACH,CALwC,CAAzC;AAOA,MAAMC,YAAY,GAAG;AACjBC,EAAAA,MAAM,EAAC;AADU,CAArB;AAIA,MAAMC,UAAU,GAAGjB,WAAW,CAAC;AAC3BkB,EAAAA,IAAI,EAAC,QADsB;AAE3BH,EAAAA,YAF2B;AAG3BI,EAAAA,QAAQ,EAAC;AACLN,IAAAA,SAAS,EAAG,CAACO,KAAD,WAAsB;AAAA,UAAd;AAACC,QAAAA;AAAD,OAAc;AAC9BD,MAAAA,KAAK,CAACJ,MAAN,GAAeK,OAAf;AACH;AAHI;AAHkB,CAAD,CAA9B;AAWA,OAAO,MAAM;AAACR,EAAAA;AAAD,IAAcI,UAAU,CAACK,OAA/B;AACP,OAAO,MAAMC,YAAY,GAAIH,KAAD,IAAWA,KAAK,CAACJ,MAAN,CAAaA,MAA7C;AACP,eAAeC,UAAU,CAACO,OAA1B","sourcesContent":["import { createSlice, createAsyncThunk } from \"@reduxjs/toolkit\";\r\nimport {APIkey} from '../../common/apis/MovieApiKey';\r\nimport movieApi from '../../common/apis/movieApi'\r\n\r\n// its take two arguments identifier and callvbackfunction and one more is object\r\nconst fetchAsyncMovies = createAsyncThunk('movies/fetchAsyncMovies', async() => {\r\n    const response = await movieApi.get(`?apikey=${APIkey}&s=${movieText}&type=movie`)\r\n    .catch(err => console.log(\"Eror is: \",err));\r\n    console.log(\"The respone from api\", response)\r\n    dispatch(addMovies(response.data))\r\n})\r\n\r\nconst initialState = {\r\n    movies:{},\r\n}\r\n\r\nconst movieSlice = createSlice({\r\n    name:\"movies\",\r\n    initialState,\r\n    reducers:{\r\n        addMovies : (state, {payload}) => {\r\n            state.movies = payload;\r\n        },\r\n    },\r\n    \r\n})\r\n\r\nexport const {addMovies} = movieSlice.actions;\r\nexport const getAllMovies = (state) => state.movies.movies\r\nexport default movieSlice.reducer;"]},"metadata":{},"sourceType":"module"}